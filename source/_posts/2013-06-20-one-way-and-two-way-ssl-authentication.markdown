---
layout: post
title: "SSL的单向认证和双向认证"
date: 2013-06-20 12:28
comments: true
categories: SSL
keywords: SSL, 单向认证, 双向认证
description: SSL的单向认证和双向认证
---

为了便于更好的认识和理解SSL协议，这里着重介绍SSL协议的握手流程。SSL协议既用到了公钥加密技术又用到了对称加密技术，对称加密技术虽然比公钥加密技术的速度快，可是公钥加密技术提供了更好的身份认证技术。SSL的握手流程非常有效的让客户端和服务器之间完成相互之间的身份认证。

<!-- more -->

###SSL握手流程
1. 客户端向服务器发送**ClientHello**消息，说明它支持的最高TLS协议版本，随机数、密码算法列表及压缩方法。
2. 服务器回复**ServerHello**消息，包含基于客户端**ClientHello**消息所选择的TLS协议版本，随机数、密码算法列表及压缩方法。服务器选择的协议版本为客户端和服务器都支持的最高版本。
3. 当双方知道了连接参数，服务器向客户端发送证书。
4. 客户端验证服务器证书的合法性，包括：服务器证书是否过期、发行服务器证书的CA是否可靠、发行CA的公钥能否正确解开服务器证书的发行CA的数字签名、服务器证书上的域名是否和服务器的实际域名相匹配。如果合法性验证没有通过，通讯将断开；如果合法性验证通过，将继续进行第5步。
5. 客户端随机产生一个用于后面通讯的“对称密码”，然后用服务器的公钥（服务器的公钥从步骤3中的服务器证书中获得）对其加密，然后将加密后的“预主密码”传给服务器。
6. 如果服务器要求客户端的身份认证（在握手过程中为可选），客户端可以建立一个随机数然后对其进行数据签名，将这个含有签名的随机数和客户端自己的证书以及加密过的“预主密码”一起传给服务器。
7. 如果服务器要求客户端的身份认证，服务器必须检验客户端证书和签名随机数的合法性，具体的合法性验证包括：客户端证书是否过期，发行客户端证书的CA是否可靠，发行CA的公钥能否正确解开客户端证书的发行CA的数字签名，检查客户端证书是否在证书废止列表（CRL）中。如果合法性验证没有通过，通讯立刻中断；如果合法性验证通过，服务器将用自己的私钥解开加密的“预主密码”，然后执行一系列步骤来产生主通讯密码（客户端也将通过同样的方法产生相同的主通讯密码）。
8. 服务器和客户端用相同的主密码即“通话密码”，一个对称密钥用于SSL协议的安全数据通讯的加解密通讯。同时在SSL通讯过程中还要完成数据通讯的完整性，防止数据通讯中的任何变化。
9. 客户端向服务器发出信息，指明后面的数据通讯将使用的步骤8中的主密码为对称密钥，同时通知服务器客户端的握手过程结束。
10. 服务器向客户端发出信息，指明后面的数据通讯将使用的步骤8中的主密码为对称密钥，同时通知客户端服务器的握手过程结束。
11. SSL的握手部分结束，SSL安全通道的数据通讯开始，客户端和服务器开始使用相同的对称密钥进行数据通讯，同时进行通讯完整性的检验。

###单向认证vs双向认证
上面所述的是**双向认证SSL**协议的具体通讯过程，这种情况要求服务器和客户端双方都有证书。**单向认证SSL**协议不需要客户端拥有CA证书，具体的流程相对于上面的步骤，只需将服务器验证客户端证书的步骤去掉，以及在协商对称密码方案，对称通话密钥时，服务器发送给客户端的是没有加过密的（这并不影响SSL过程的安全性）密码方案。这样，双方具体的通讯内容，就是加密过的数据。如果有第三方攻击，获得的只是加密的数据，第三方要获得有用的信息，就需要对加密的数据进行解密，这时候的安全就依赖于密码方案的安全。而幸运的是，目前所用的密码方案，只要通讯密钥长度足够的长，就足够的安全。这也是我们强调要求使用128位加密通讯的原因。

一般Web应用都是采用单向认证的，原因很简单，用户数目广泛，且无需做在通讯层做用户身份验证，一般都在应用逻辑层来保证用户的合法登入。但如果是企业应用对接，情况就不一样，可能会要求对客户端（相对而言）做身份验证。这时就需要做双向认证。